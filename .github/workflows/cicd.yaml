name: Build, Push, and Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT: alpine-keep-440111-r4
  IMAGE_NAME: cicd2
  TAG_VERSION: 1.0
  TAG_LATEST: latest
  SERVICE: cicd1
  REGION: asia-southeast2
  GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/key.json
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Authenticate with Google Cloud
        run: |
          echo "${{ secrets.GCP_KEY_COBA }}" > /tmp/key.json
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/key.json"
          echo "${{ secrets.GCP_KEY_COBA }}" > $GOOGLE_APPLICATION_CREDENTIALS
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
          gcloud config set project $GCP_PROJECT

      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up QEMU for multi-architecture builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 3. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 4. Login to Google Container Registry
      - name: Login to Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_KEY_COBA }}

      # 5. Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            gcr.io/${{ env.GCP_PROJECT }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}
            gcr.io/${{ env.GCP_PROJECT }}/${{ env.IMAGE_NAME }}:${{ env.TAG_LATEST }}

      # 6. Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_KEY_COBA }}
          export_default_credentials: true

      # 7. Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
              --image=gcr.io/${{ env.GCP_PROJECT }}/${{ env.IMAGE_NAME }}:${{ env.TAG_LATEST }} \
              --allow-unauthenticated \
              --port=9000 \
              --service-account=1012925828272-compute@developer.gserviceaccount.com \
              --region=${{ env.REGION }} \
              --project=${{ env.GCP_PROJECT }}
